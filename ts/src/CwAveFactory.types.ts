/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.12.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  cw420: number;
  description: string;
  event_curator: string;
  event_timeline: EventSegment[];
  guest_details: GuestDetails[];
  title: string;
  usher_admins: Member[];
}
export type ExecuteMsg = {
  create_native_av_event_contract: {
    instantiate_msg: InstantiateMsg;
    label: string;
  };
} | {
  update_code_id: {
    cw_ave_code_id: number;
  };
} | {
  update_ownership: Action;
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type EventSegmentAccessType = {
  single_segment: {};
} | {
  specific_segments: {
    ids: number[];
  };
};
export type Uint128 = string;
export type Action = {
  transfer_ownership: {
    expiry?: Expiration | null;
    new_owner: string;
  };
} | "accept_ownership" | "renounce_ownership";
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export interface EventSegment {
  end: Timestamp;
  stage_description: string;
  start: Timestamp;
}
export interface GuestDetails {
  event_segment_access: EventSegmentAccessType;
  guest_type: string;
  guest_weight: number;
  max_ticket_limit: number;
  ticket_cost: Coin[];
  total_ticket_limit: number;
}
export interface Coin {
  amount: Uint128;
  denom: string;
}
export interface Member {
  addr: string;
  weight: number;
}
export type QueryMsg = {
  list_av_event_contracts: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  list_av_event_contracts_reverse: {
    limit?: number | null;
    start_before?: string | null;
  };
} | {
  list_av_event_contracts_by_instantiator: {
    instantiator: string;
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  list_av_event_contracts_by_instantiator_reverse: {
    instantiator: string;
    limit?: number | null;
    start_before?: string | null;
  };
} | {
  ownership: {};
} | {
  code_id: {};
};
export type ArrayOfAvEventContract = AvEventContract[];
export interface AvEventContract {
  contract: string;
  instantiator: string;
}
export type Addr = string;
export interface OwnershipForAddr {
  owner?: Addr | null;
  pending_expiry?: Expiration | null;
  pending_owner?: Addr | null;
}