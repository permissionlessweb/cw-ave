/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.12.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Timestamp = Uint64;
export type Uint64 = string;
export type EventSegmentAccessType = {
  single_segment: {};
} | {
  specific_segments: {
    ids: number[];
  };
};
export type Uint128 = string;
export interface InstantiateMsg {
  cw420: number;
  description: string;
  event_curator: string;
  event_timeline: EventSegments[];
  guest_details: GuestDetails[];
  title: string;
  usher_admins: Member[];
}
export interface EventSegments {
  end: Timestamp;
  stage_description: string;
  start: Timestamp;
}
export interface GuestDetails {
  event_segment_access: EventSegmentAccessType;
  guest_type: string;
  guest_weight: number;
  max_ticket_limit: number;
  ticket_cost: Coin[];
  total_ticket_limit: number;
}
export interface Coin {
  amount: Uint128;
  denom: string;
}
export interface Member {
  addr: string;
  weight: number;
}
export type ExecuteMsg = {
  purchase_tickets: {
    guests: RegisteringGuest[];
  };
} | {
  check_in_guest: {
    checkin: CheckInDetails;
  };
} | {
  refund_unconfirmed_tickets: {
    guests: string[];
  };
} | {
  claim_ticket_payments: {};
};
export type Binary = string;
export interface RegisteringGuest {
  guest_weight: number;
  reap: RegisteringEventAddressAndPayment[];
}
export interface RegisteringEventAddressAndPayment {
  payment_asset: string;
  ticket_addr: string;
}
export interface CheckInDetails {
  pubkey: Binary;
  signature: Binary;
  signed_data: string;
  ticket_addr: string;
}
export type QueryMsg = {
  config: {};
} | {
  event_segments: {};
} | {
  guest_type_details_by_weight: {
    guest_weight: number;
  };
} | {
  guest_type_details_all: {};
} | {
  guest_attendance_status: {
    event_stage_id: number;
    guest: string;
  };
} | {
  guest_attendance_status_all: {
    guest: string;
  };
} | {
  ticket_payment_options_by_guest_weight: {
    guest_weight: number;
  };
} | {
  all_ticket_payment_options: {};
};
export type ArrayOfTicketPaymentOption = TicketPaymentOption[];
export interface TicketPaymentOption {
  guest_type: string;
  payment_options: Coin[];
}
export type Addr = string;
export interface Config {
  curator: Addr;
  event_guest_contract: Addr;
  event_usher_contract: Addr;
  title: string;
}
export type ArrayOfTupleOfUintAndEventSegments = [number, EventSegments][];
export type Boolean = boolean;
export type ArrayOfBoolean = boolean[];
export type ArrayOfGuestDetails = GuestDetails[];